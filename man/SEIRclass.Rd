% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SEIRclass.R
\name{SEIRclass}
\alias{SEIRclass}
\title{Encapsulated OO classes for within-group SEIR models}
\description{
Encapsulated OO classes for within-group SEIR models

Encapsulated OO classes for within-group SEIR models
}
\details{
Both R6 and C++ implementations are available - see make_group for
a wrapper function that returns either implementation. However, the
The method signatures and outputs of the R6 and C++ implementations are
(or at least should be!) identical, so this documentation applies to
the C++ implementation as well as the R6 implementation.

TODO: fully document this class
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{S}}{number of susceptible animals}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SEIRclass-new}{\code{SEIRclass$new()}}
\item \href{#method-SEIRclass-save}{\code{SEIRclass$save()}}
\item \href{#method-SEIRclass-reset}{\code{SEIRclass$reset()}}
\item \href{#method-SEIRclass-update}{\code{SEIRclass$update()}}
\item \href{#method-SEIRclass-run}{\code{SEIRclass$run()}}
\item \href{#method-SEIRclass-get_state}{\code{SEIRclass$get_state()}}
\item \href{#method-SEIRclass-print}{\code{SEIRclass$print()}}
\item \href{#method-SEIRclass-clone}{\code{SEIRclass$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-new"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-new}{}}}
\subsection{Method \code{new()}}{
Create a new within-group model
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$new(
  update_type = c("deterministic", "stochastic"),
  numE = 3L,
  group_name = NA_character_
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new within-group model object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-save"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-save}{}}}
\subsection{Method \code{save()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$save()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-reset"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-reset}{}}}
\subsection{Method \code{reset()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$reset()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-update"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$update(d_time)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-run"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-run}{}}}
\subsection{Method \code{run()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$run(add_time, d_time)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-get_state"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-get_state}{}}}
\subsection{Method \code{get_state()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$get_state()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-print"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SEIRclass-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SEIRclass-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SEIRclass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
