% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_rates.R
\name{apply_rates}
\alias{apply_rates}
\title{Combine compartment sizes and rates to obtain compartment change values}
\usage{
apply_rates(
  compartments,
  rates,
  d_time,
  update_type = c("deterministic", "stochastic")
)
}
\arguments{
\item{compartments}{a vector of compartment sizes on which to apply all rates}

\item{rates}{a vector of rates representing movement from each of the compartments}

\item{d_time}{the size of the time step}

\item{update_type}{deterministic or stochastic}
}
\description{
This is utility function taking a vector of compartments and rates, and
returning a matrix of calculated (for deterministic) or sampled (for
stochastic) values for the change in compartment size from each input
compartment (row) to each of the output compartments represented by the
input rates (columns). When only a single rate is input then the function
just returns the usual compartment * 1-exp(-rate\emph{d_time) (for deterministic) or
rbinom(length(compartment), compartment, 1-exp(-rate}d_time)) (for stochastic).
Where there are multiple rates, then the function corrects for the overlap
in the competing rates and (for stochastic) uses a multinomial distribution
instead of a binomial distribution to ensure that the sum of each row of
output is less than or equal to the corresponding input compartment size.

Multiple rows are only relevant where there are multiple sub-compartments,
i.e. movement from the E state. In all other cases, a matrix with a single
row is returned. Likewise, multiple columns are only relevant where there are
multiple rates - in all other cases, a matrix with a single column is returned.
If you know that you have a single compartment and/or a single rate, then
you can either explicitly select the first row and/or column or use as.numeric()
on the output to remove the dimensions attribute (see the bottom of the
examples).
}
\examples{
## A single compartment and rate:
I <- 10; gamma <- 0.1; d_time <- 1
apply_rates(I, gamma, d_time, "deterministic")
### Is the same as:
I * (1 - exp(-gamma*d_time))
### Stochastic version uses rbinom:
apply_rates(I, gamma, d_time, "stochastic")

## A single compartment and vector of rates:
cull <- 0.01
apply_rates(I, c(gamma,cull), d_time, "deterministic")
## Due to competing rates, this is NOT the same as:
I * (1 - exp(-gamma*d_time))
I * (1 - exp(-cull*d_time))
### Stochastic version uses rmultinom:
apply_rates(I, c(gamma,cull), d_time, "stochastic")

## A vector of compartments and single rate:
E <- c(0,1,2); omega <- 0.1
apply_rates(E, omega, d_time, "deterministic")
### Is the same as:
apply_rates(E[1], omega, d_time, "deterministic")
apply_rates(E[2], omega, d_time, "deterministic")
apply_rates(E[3], omega, d_time, "deterministic")
### Is the same as:
E * (1 - exp(-omega*d_time))
### Stochastic version uses rbinom:
apply_rates(E, omega, d_time, "stochastic")

## A vector of compartments and vector of rates:
repl <- 0.001
apply_rates(E, c(omega,repl), d_time, "deterministic")
apply_rates(E, c(omega,repl), d_time, "stochastic")

## If the rate vector has names, then these are carried over to the
## output column names:
apply_rates(I, c(toR=gamma,toS=cull), d_time, "deterministic")

## If you only have a single rate (and/or single compartment) then you
## probably want to remove the dimensions attribute before using, i.e.:
apply_rates(E, omega, d_time, "deterministic")[,1]
apply_rates(I, c(gamma,cull), d_time, "deterministic")[1,]
## Or:
as.numeric(apply_rates(E, omega, d_time, "deterministic"))
as.numeric(apply_rates(I, c(gamma,cull), d_time, "deterministic"))


}
